services:

  chatbot:
    container_name: "app-rag-chatbot"
    build: .
    ports:
      - "8501:8501"
    env_file:
      - .env
    volumes:
      - .:/code
    command: ["streamlit", "run", "src/apps/rag/chatbot.py", "--server.port=8501", "--server.address=0.0.0.0"]
    restart: always
    depends_on:
      - ollama
      - milvus
    networks:
      - ollama-docker

  rag:
    container_name: "app-rag-question-answer"
    build: .
    ports:
      - "8502:8501"
    volumes:
      - .:/code
    command: "streamlit run src/apps/rag/app.py"
    restart: always
    depends_on:
      - ollama
      - milvus
    networks:
      - ollama-docker

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - .:/code
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/ollama/ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: 1
#              capabilities: [gpu]
    networks:
      - ollama-docker

  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: milvus-etcd
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command:
      - etcd
      - --log-level=debug
      - --advertise-client-urls=http://etcd:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --initial-advertise-peer-urls=http://etcd:2380
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-cluster=default=http://etcd:2380
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
#      - etcd-data:/etcd-data
    healthcheck:
      test: [ "CMD", "etcdctl", "endpoint", "health" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ollama-docker

  attu:
    image: zilliz/attu:dev
    container_name: milvus-wedamin
    ports:
      - "9100:3000"
#    volumes:
#      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/attu:/app/tls
    environment:
      - ATTU_LOG_LEVEL=info
      - HOST_URL=http://localhost:9100
      - MILVUS_URL=http://milvus:19530
    networks:
      - ollama-docker

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    command: server /minio_data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ollama-docker

  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.5
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      - ETCD_ENDPOINTS=http://etcd:2379
      - MINIO_ADDRESS=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      - "etcd"
      - "minio"
    ports:
      - "19530:19530"
      - "9091:9091"
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              capabilities: ["gpu"]
#              count: 1
##              device_ids: ["0"]
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
#      - milvus-data:/milvus-data
    networks:
      - ollama-docker

#volumes:
#  etcd-data:
#  minio-data:
#  milvus-data:

networks:
  ollama-docker:
    external: false
  
